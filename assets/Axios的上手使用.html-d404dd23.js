const e=JSON.parse('{"key":"v-15d5a4bc","path":"/Tech/Front-end/03_VUE/axios%E6%A8%A1%E5%9D%97/Axios%E7%9A%84%E4%B8%8A%E6%89%8B%E4%BD%BF%E7%94%A8.html","title":"","lang":"en-US","frontmatter":{"description":"简介 基于promise用于浏览器和node.js的http客户端，因此可以使用Promise API； 八大特点： 在浏览器中创建XMLHttpRequest请求 在node.js中发送http请求 支持Promise API 拦截请求和响应 转换请求和响应数据 取消请求 自动转换JSON数据 客户端支持防止CSRF/XSRF(跨域请求伪造)","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/03_VUE/axios%E6%A8%A1%E5%9D%97/Axios%E7%9A%84%E4%B8%8A%E6%89%8B%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"简介 基于promise用于浏览器和node.js的http客户端，因此可以使用Promise API； 八大特点： 在浏览器中创建XMLHttpRequest请求 在node.js中发送http请求 支持Promise API 拦截请求和响应 转换请求和响应数据 取消请求 自动转换JSON数据 客户端支持防止CSRF/XSRF(跨域请求伪造)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"基础用法","slug":"基础用法","link":"#基础用法","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.75,"words":226},"filePathRelative":"Tech/Front-end/03_VUE/axios模块/Axios的上手使用.md","excerpt":"<h2> 简介</h2>\\n<ul>\\n<li>基于promise用于浏览器和node.js的http客户端，因此可以使用Promise API；</li>\\n</ul>\\n<p>八大特点：</p>\\n<ol>\\n<li><strong>在浏览器中创建XMLHttpRequest请求</strong></li>\\n<li><strong>在node.js中发送http请求</strong></li>\\n<li><strong>支持Promise API</strong></li>\\n<li><strong>拦截请求和响应</strong></li>\\n<li><strong>转换请求和响应数据</strong></li>\\n<li><strong>取消请求</strong></li>\\n<li><strong>自动转换JSON数据</strong></li>\\n<li><strong>客户端支持防止CSRF/XSRF(跨域请求伪造)</strong></li>\\n</ol>","autoDesc":true}');export{e as data};
