import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as r,c as l,a as e,b as t,d as i,w as c,f as n}from"./app-9e438faa.js";const h={},v=n(`<h4 id="_1概述" tabindex="-1"><a class="header-anchor" href="#_1概述" aria-hidden="true">#</a> ①概述</h4><p>component元素配合is属性 <code>&lt;component v-bind:is=&quot;data&quot;&gt;&lt;/component&gt;</code> 用data字段动态地控制渲染哪一个子组件，data可以是：</p><ul><li>被注册的组件名</li><li>导入的组件对象 当我们使用以上方法切换组件的时候，被切换掉的组件会被卸载/销毁，这就会导致我们会丢失其中已经有的变化，当组件被销毁再被创建的时候，该组件实例会变成初始状态。 我们怎么使得被切换掉的组件保持“存活”呢？</li></ul><h4 id="_2keeplive组件" tabindex="-1"><a class="header-anchor" href="#_2keeplive组件" aria-hidden="true">#</a> ②KeepLive组件</h4><p>KeepLive组件是一个VUE的内置组件，其作用是缓存多个组件动态切换时被切换的组件VUE实例</p><p>使用方式：用KeepLive组件将动态组件包装起来：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;KeepLive&gt;
	&lt;component :is = &quot;data&quot;&gt;&lt;/component&gt;
&lt;/KeepLive&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),_=n(`<h4 id="_3对可缓存的组件和最大缓存组件的控制" tabindex="-1"><a class="header-anchor" href="#_3对可缓存的组件和最大缓存组件的控制" aria-hidden="true">#</a> ③对可缓存的组件和最大缓存组件的控制</h4><p>见文档</p><h4 id="_4缓存实例的生命周期" tabindex="-1"><a class="header-anchor" href="#_4缓存实例的生命周期" aria-hidden="true">#</a> ④缓存实例的生命周期</h4><p>当一个动态组件被切换而缓存或者被重新激活的时候，它激活如下生命周期：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export default { 
	activated() { // 在首次挂载、 // 以及每次从缓存中被重新插入的时候调用 },
	deactivated() { // 在从 DOM 上移除、进入缓存 // 以及组件卸载时调用 } }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),p={id:"_5动态组件与v-if-v-show",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#_5动态组件与v-if-v-show","aria-hidden":"true"},"#",-1),m=e("p",null,"动态组件的is属性是使用v-if的方式来进行条件渲染的，在tabs切换的场景下对性能的消耗很大，因为每一次切换都是卸载和重新渲染",-1);function f(x,b){const d=a("keep-live"),s=a("RouterLink");return r(),l("div",null,[v,e("p",null,[t("注意，KeepLive组件在DOM原生模板中使用时，应该写成`"),i(d)]),_,e("h4",p,[u,t(" ⑤动态组件与v-if, "),i(s,{to:"/Tech/Front-end/03_VUE/v-show.html"},{default:c(()=>[t("v-show")]),_:1})]),m])}const L=o(h,[["render",f],["__file","动态组件.html.vue"]]);export{L as default};
