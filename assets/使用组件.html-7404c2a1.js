import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,f as p}from"./app-9e438faa.js";const l={},u=p(`<h5 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h5><ol><li>在components文件夹下创建组件文件夹，跟页面相同地包含.js .wxml .wxss和.json的文件</li><li>在组件json文件里面配置：<code>&#39;component&#39;: true</code></li><li>用component构造器编写组件，编写组件的样式</li><li>在需要引入组件的页面json文件下配置\`\`\`</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>usingComponents&quot;<span class="token operator">:</span><span class="token punctuation">{</span>
	<span class="token string-property property">&quot;定义的组件名&quot;</span><span class="token operator">:</span> <span class="token string">&quot;组件路径&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>在编写页面中使用定义的组件名标签使用组件</li></ol><hr><p>微信小程序文档中提供的组件有限，一定程度上限制了开发需求，这里就需要我们自定义一些控件，实现开发需求。自定义控件有两种方式，一种是选择模板的方式，另一种是选择组件的方式来创建。这里我选择了组件方式来创建，这样只需引入组件和外部添加数据，内部展示数据，即可实现重用。</p><figure><img src="//upload-images.jianshu.io/upload_images/1213330-da47b2ece0252c7c?imageMogr2/auto-orient/strip|imageView2/2/w/922/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>目前微信小程序提供的组件</p><h5 id="_1、文件目录结构" tabindex="-1"><a class="header-anchor" href="#_1、文件目录结构" aria-hidden="true">#</a> 1、文件目录结构</h5><p>这里一定要注意我们目录结构，个人喜好把项目中的业务文件放在pages中，图片放在与pages同级的images文件中，第三方的sdk存放在libs文件中，工具类存放在utils文件中，同样把共用的自定义组件存放在同级的component文件中。这样便于管理，查找使用。</p><figure><img src="//upload-images.jianshu.io/upload_images/1213330-bdf58437629d2c81?imageMogr2/auto-orient/strip|imageView2/2/w/376/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>组件文件</p><h5 id="_2、自定义组件" tabindex="-1"><a class="header-anchor" href="#_2、自定义组件" aria-hidden="true">#</a> 2、自定义组件</h5><p>微信小程序中没有select下拉选项框，这里选择组件的方式来自定义创建一个select组件。</p><p>在component文件目录下，创建一个select文件夹，随后select文件夹下手动创建：select.js、select.json、select.wxml、select.wxss 四个文件。(<code>注意：</code> 可以在select文件夹下自动创建上面👆四个文件，自动创建的文件会自动配置好代码。只需在引入组件的时候，在引入组件的页面的json文件中配置组件的名称和组件的位置即可。)</p><h6 id="_2-2、配置组件" tabindex="-1"><a class="header-anchor" href="#_2-2、配置组件" aria-hidden="true">#</a> 2.2、配置组件</h6><p>select.js、select.json、select.wxml、select.wxss上面四个文件是是我们手动创建的，那就需要我们手动配置代码。在json文件中写入代码：<code>&quot;component&quot;: true</code> 表示自定义组件声明，代码如下所示。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;component&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>同时，js文件中也需要写成这种格式，其代码如下：</strong></p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">/**
 1. 组件的属性列表
   */</span>
  properties<span class="token operator">:</span> <span class="token punctuation">{</span>
    selectArray<span class="token operator">:</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token comment">// 初始时要展示的内容</span>
    currentText<span class="token operator">:</span><span class="token punctuation">{</span>
      type<span class="token operator">:</span>String<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/**
 2. 组件的初始数据
   */</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span>
    isShow<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 初始option不显示</span>
    arrowAnimation<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 箭头的动画</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">/**
 3. 组件的方法列表
   */</span>
  methods<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">//option的显示与否</span>
    <span class="token function-variable function">selectToggleAction</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 获取当前option显示的状态</span>
      <span class="token keyword">var</span> nowShow <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>isShow<span class="token punctuation">;</span>
      <span class="token comment">// 创建动画</span>
      <span class="token keyword">var</span> animation <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">createAnimation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        timingFunction<span class="token operator">:</span> <span class="token string">&quot;ease&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>animation <span class="token operator">=</span> animation<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>nowShow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        animation<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          arrowAnimation<span class="token operator">:</span> animation<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        animation<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          arrowAnimation<span class="token operator">:</span> animation<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        isShow<span class="token operator">:</span> <span class="token operator">!</span>nowShow
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">//设置内容</span>
    <span class="token function-variable function">selectItemAction</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 当前option的数据是引入组件的页面传过来的，所以这里获取数据只有通过this.properties</span>
      <span class="token keyword">var</span> nowData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span>selectArray<span class="token punctuation">;</span>
      <span class="token keyword">var</span> index <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>index<span class="token punctuation">;</span> <span class="token comment">// 当前点击的索引</span>
      <span class="token keyword">var</span> current_text <span class="token operator">=</span> nowData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// 当前点击的内容</span>
      <span class="token keyword">var</span> current_type <span class="token operator">=</span> nowData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>type<span class="token punctuation">;</span> <span class="token comment">// 当前点击的内容</span>
      <span class="token comment">// 再次执行动画，注意这里一定是this.animation来使用动画!!!!!!</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>animation<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        isShow<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        current_text<span class="token operator">:</span> current_text<span class="token punctuation">,</span>
        arrowAnimation<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>animation<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token comment">// 内容更新后，需要把更新的数据传输出去</span>
      <span class="token keyword">var</span> nowDate <span class="token operator">=</span> <span class="token punctuation">{</span>
        id<span class="token operator">:</span> index<span class="token punctuation">,</span>
        name<span class="token operator">:</span> current_text<span class="token punctuation">,</span>
        type<span class="token operator">:</span> current_type
      <span class="token punctuation">}</span>
      <span class="token comment">// 这里的 getNowData 要和外部的 bind:getNowData ，名称一定要对应</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">&#39;getNowData&#39;</span><span class="token punctuation">,</span> nowDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;选择之后的current_text&quot;</span><span class="token punctuation">,</span> current_text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>Component构造器可用于定义组件，调用Component构造器时可以指定组件的属性、数据、方法等。</li><li>properties是组件的对外属性，是属性名到属性设置的映射表，属性设置中可包含三个字段， type 表示属性类型、 value 表示属性初始值、 observer 表示属性值被更改时的响应函数。</li><li>data 和普通页面的data一样，是组件的内部数据，和 properties 一同用于组件的模版渲染。</li><li>methods组件的方法，包括事件响应函数和任意的自定义方法，关于事件响应函数的使用。在这里面获取数据有两种方法：一种是获取data里的数据： this.data.属性名；一种是获取 properties 中的属性值： this.properties.属性名。</li></ol>`,21),r=n("code",null,"注意！！！",-1),k=n("br",null,null,-1),d={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fdevelopers.weixin.qq.com%2Fminiprogram%2Fdev%2Fframework%2Fcustom-component%2Fcomponent.html",target:"_blank",rel:"noopener noreferrer"},v=p(`<p><strong>在wxml文件中，代码如下所示：</strong></p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>section-select-box<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>select-content<span class="token punctuation">&#39;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>selectToggleAction<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>select-text<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token punctuation">{</span>currentText<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>select-img<span class="token punctuation">&#39;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>../../images/icon_arrow_down.png<span class="token punctuation">&#39;</span></span> <span class="token attr-name">animation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{arrowAnimation}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">

  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>select-list<span class="token punctuation">&#39;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{isShow}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>select-list-item<span class="token punctuation">&#39;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{selectArray}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{index}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">wx:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>{{index}}<span class="token punctuation">&#39;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>selectItemAction<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>animation方法是为了获取当前点击元素的索引与内容。这里 <code>animation=&quot;{{arrowAnimation}}&quot;</code>是箭头转动的动画效果。</li><li><code>bindtap=&#39;selectToggleAction&#39;</code> selectToggleAction 方法是控制下拉选项框隐藏和显示的事件。</li><li><code>bindtap=&#39;selectItemAction&#39;</code> selectItemAction 是下拉选项框选择子项之后，设置内容的事件。</li><li><code>wx:if=&quot;{{isShow}}&quot;</code> isShow是为了控制 option 选项显示与隐藏。</li></ol><p><strong>在wxss文件中，代码如下所示：</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.section-select-box</span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 20rpx 30rpx<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 690rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.select-content</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 2rpx solid #e2e2e2<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10rpx<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 34rpx<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 80rpx<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.select-text</span> <span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 32rpx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.select-img</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">right</span><span class="token punctuation">:</span> 30rpx<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 10rpx<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 60rpx<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 60rpx<span class="token punctuation">;</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all .3s ease<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.select-list</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 2rpx solid #e2e2e2<span class="token punctuation">;</span>
  <span class="token property">border-top</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>
  <span class="token property">max-height</span><span class="token punctuation">:</span> 160rpx<span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.select-list-item</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
  <span class="token property">border-top</span><span class="token punctuation">:</span> 2rpx solid #e2e2e2<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.select-list-item:first-child</span><span class="token punctuation">{</span>
  <span class="token property">border-top</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2-3、使用组件" tabindex="-1"><a class="header-anchor" href="#_2-3、使用组件" aria-hidden="true">#</a> 2.3、使用组件</h6><ol><li>使用自定义组件前，需要在引入组件的页面的json文件中配置，比如我要在 index.wxml 中引入，那么在 index.json 中我就需要配置：</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Select&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/component/select/select&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>注意事项:</code><br> Select 是你定义的组件的名称，后面的是组件所在的位置。 <code>/</code> 单斜杠表示根目录，是绝对路径。</p><p>如果控制台报错，出现没找到路径的情况，一定是自己填写的路径不对，认真检查路径代码。</p><figure><img src="//upload-images.jianshu.io/upload_images/1213330-25d55780080c3225.png?imageMogr2/auto-orient/strip|imageView2/2/w/777/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>你可能出现的报错！！！</p><p>配置好后，在wxml引入组件，代码如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>  <span class="token operator">&lt;</span>Select <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;section-select&quot;</span> <span class="token keyword">select</span><span class="token operator">-</span>array<span class="token operator">=</span>&#39;<span class="token punctuation">{</span><span class="token punctuation">{</span>selectArray<span class="token punctuation">}</span><span class="token punctuation">}</span>&#39;  current<span class="token operator">-</span>text<span class="token operator">=</span><span class="token string">&quot;{{current_text}}&quot;</span> bind<span class="token punctuation">:</span>getNowData<span class="token operator">=</span>&#39;getCurrentTextAction&#39;<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Select<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>select-array 是我在组件中自定义的属性名，这个是和组件所在的 js 中properties中的属性是对应的。在 properties 定义的属性中，属性名采用驼峰写法<code>例如：selectArray</code>。在引入组件的 wxml 中，指定属性值时则对应使用连字符写法<code>例如：select-array=&#39;{{selectArray}}，selectArray为select组件中所需展示的数据源</code>。</li><li>这里getNowData是自定义的子组件需要触发的事件名，getNowData是引入组件的页面需要获取传过来的数据的自定义的事件名。</li></ol><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code>      <span class="token comment">// 内容更新后，需要把更新的数据传输出去</span>
      <span class="token keyword">var</span> nowDate <span class="token operator">=</span> <span class="token punctuation">{</span>
        id<span class="token operator">:</span> index<span class="token punctuation">,</span>
        name<span class="token operator">:</span> current_text<span class="token punctuation">,</span>
        type<span class="token operator">:</span> current_type
      <span class="token punctuation">}</span>
      <span class="token comment">// 这里的 getNowData 要和外部的 bind:getNowData ，名称一定要对应</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">&#39;getNowData&#39;</span><span class="token punctuation">,</span> nowDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;选择之后的current_text&quot;</span><span class="token punctuation">,</span> current_text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在引入组件的页面的js添加引入组件时，自定义的函数：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>  <span class="token function-variable function">getCurrentTextAction</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> item <span class="token operator">=</span> e<span class="token punctuation">.</span>detail<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">current_text</span><span class="token operator">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span> 
      <span class="token literal-property property">current_type</span><span class="token operator">:</span> item<span class="token punctuation">.</span>type
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>console.log(&quot;打印数据&quot;,e.detail)，传过来的值就在detail里面。</p>`,19),m={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FCitrusHan%2FMyJobs_WeChat.git",target:"_blank",rel:"noopener noreferrer"};function b(g,x){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[r,k,s(" 如果还需要其他属性、数据、方法等可查看微信小程序官方文档 "),n("a",d,[s("Component构造器"),t(a)]),s("。")]),v,n("blockquote",null,[n("p",null,[s("具体代码实现，稍后我会整理上传到我的GitHub，可以参考我的"),n("a",m,[s("GitHub"),t(a)]),s(" 上的代码。")])])])}const y=e(l,[["render",b],["__file","使用组件.html.vue"]]);export{y as default};
