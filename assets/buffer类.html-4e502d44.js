import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as r,c as t,f}from"./app-9e438faa.js";const o={},s=f('<ul><li>JavaScript 语言自身只有字符串数据类型，没有二进制数据类型。 但在处理像TCP流或文件流时，必须使用到二进制数据。因此在 Node.js中，定义了一个 Buffer 类，该<strong>类用来创建一个专门存放二进制数据的缓存区。</strong></li><li>在 Node.js 中，Buffer 类是随 Node 内核一起发布的核心库。</li><li>Buffer 库为 Node.js 带来了一种存储原始数据的方法，可以让 Node.js 处理二进制数据，</li><li>每当需要在 Node.js 中处理I/O操作中移动的数据时，就有可能使用 Buffer 库。 原始数据存储在 Buffer 类的实例中。一个 Buffer 类似于一个整数数组，但它对应于 V8 堆内存之外的一块原始内存。</li></ul><p>创建一个buffer类实例来储存数据的原始数据： <code>const data = Buffer.from(&quot;这里是我的数据&quot;)</code></p><p>![[Pasted image 20230506184822.png]] ![[Pasted image 20230506184753.png]]</p><h4 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h4><p>https://blog.csdn.net/m0_46672781/article/details/124105886</p>',5),a=[s];function c(i,n){return r(),t("div",null,a)}const u=e(o,[["render",c],["__file","buffer类.html.vue"]]);export{u as default};
