import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as d,f as c}from"./app-9e438faa.js";const t={},p=c('<h3 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1.概述</h3><p><code>this.id</code>或者<code>this.name</code>这种写法都是访问我们自己在模板中定义的变量或者属性，但是VUE框架本身针对每个VUE实例或者对象定义了很多属性或者变量，<code>vue.use</code>使用的模块/插件定义的相关属性/变量也是通过这种形式来调用：<code>this.$router.params.id</code></p><p>也可以理解为组件公共实例(即<code>this</code>)上暴露的内置属性和方法，除了<code>$data</code>下的嵌套属性之外，其他都是只读的</p><h3 id="_2-具体属性" tabindex="-1"><a class="header-anchor" href="#_2-具体属性" aria-hidden="true">#</a> 2.具体属性</h3><p><code>$data</code></p><p><code>$props</code> object</p><p><code>$el</code> 该组件实例管理的 DOM 根节点，直到组件挂载完成(mounted)之前，<code>this.$el</code>属性都是<code>undefined</code></p><p><code>$options</code> 暴露当前组件已经解析的选项，如：props,components选项，因为很多选项都可以直接访问（如通过<code>this.$props</code>访问props选项），此属性一般用来访问自定义选项</p><p><code>$parent</code> 当前组件可能存在的父组件实例，如果当前组件为顶层组件，则返回null</p><p><code>$root</code> 当前组件树的根组件实例。如果当前实例没有父组件，那么这个值就是它自己</p><p><code>$slots</code> 表示父组件所传入插槽的对象 每一个插槽都在 <code>this.$slots</code> 上暴露为一个函数，返回一个 vnode 数组，同时 key 名对应着插槽名。默认插槽暴露为 <code>this.$slots.default</code></p><p><code>$refs</code></p><p><code>$attrs</code> 一个包含了组件所有透传attributes的对象，详见[[透传attributes]]</p><p><code>$watch</code> 命令式创建侦听器，见[[侦听器]]</p><p><code>$emit</code></p><p>``</p>',16),s=[p];function a(r,i){return o(),d("div",null,s)}const h=e(t,[["render",a],["__file","VUE中的_美元符号.html.vue"]]);export{h as default};
