import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as e,f as n}from"./app-9e438faa.js";const d={},t=n(`<h3 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式" aria-hidden="true">#</a> 使用方式</h3><ol><li>定义动画</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@keyframes 动画名称 {
	0% {
		width: 100px;
		}
	100% {
		width: 300px;
		}
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.在元素的css属性里面调用动画并且进行参数设置 如下两个参数是必要的</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.moving_element {
	animation-name: 动画名称;
	animation-duration: 3s; 
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他动画设置属性" tabindex="-1"><a class="header-anchor" href="#其他动画设置属性" aria-hidden="true">#</a> 其他动画设置属性</h3><h4 id="animation-简写属性" tabindex="-1"><a class="header-anchor" href="#animation-简写属性" aria-hidden="true">#</a> animation 简写属性</h4><h4 id="animation-name-must" tabindex="-1"><a class="header-anchor" href="#animation-name-must" aria-hidden="true">#</a> animation-name(must)</h4><h4 id="animation-duration-must" tabindex="-1"><a class="header-anchor" href="#animation-duration-must" aria-hidden="true">#</a> animation-duration(must)</h4><p>默认为0</p><h4 id="animation-timing-function-动画的速度曲线" tabindex="-1"><a class="header-anchor" href="#animation-timing-function-动画的速度曲线" aria-hidden="true">#</a> animation-timing-function 动画的速度曲线</h4><p>默认为<code>ease</code></p><h4 id="animation-delay-动画开始时间" tabindex="-1"><a class="header-anchor" href="#animation-delay-动画开始时间" aria-hidden="true">#</a> animation-delay 动画开始时间</h4><p>默认为<code>0 </code></p><h4 id="animation-iteration-count-动画播放次数" tabindex="-1"><a class="header-anchor" href="#animation-iteration-count-动画播放次数" aria-hidden="true">#</a> animation-iteration-count 动画播放次数</h4><p>默认是<code>1</code>，还可以设置<code>infinite </code></p><h4 id="animation-direction-下一周期是否逆向播放" tabindex="-1"><a class="header-anchor" href="#animation-direction-下一周期是否逆向播放" aria-hidden="true">#</a> animation-direction 下一周期是否逆向播放</h4><p>默认<code>normal</code>，逆向播放值为<code>alternate</code></p><h4 id="animation-play-state" tabindex="-1"><a class="header-anchor" href="#animation-play-state" aria-hidden="true">#</a> animation-play-state</h4><p>可以控制动画的停止和开始，比如鼠标hover上去的时候就暂停动画，就可以用这个属性实现 默认是<code>running</code>，结束是<code>pause</code></p><h4 id="animation-fill-mode" tabindex="-1"><a class="header-anchor" href="#animation-fill-mode" aria-hidden="true">#</a> animation-fill-mode</h4><p>动画结束后的状态 <code>forwards</code> 动画结束后停留在终点 <code>backwards</code>动画结束后回到起点</p>`,22),r=[t];function o(s,c){return i(),e("div",null,r)}const m=a(d,[["render",o],["__file","CSS动画.html.vue"]]);export{m as default};
