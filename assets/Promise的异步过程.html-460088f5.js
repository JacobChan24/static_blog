const e=JSON.parse('{"key":"v-58e3b3f6","path":"/Tech/Front-end/02_Javascript/Runtime/Promise%E7%9A%84%E5%BC%82%E6%AD%A5%E8%BF%87%E7%A8%8B.html","title":"","lang":"en-US","frontmatter":{"description":"Promise的resolve是异步的操作，只会在宏观任务执行完之后才执行，JS的微观任务always会加到当前宏观任务的末尾，下一个宏观任务在上一个宏观任务里面的微观任务执行完之后才会执行 Promise的resolve之前的代码只是正常的函数调用而已 setTimeout是浏览器API，会产生一个宏任务：微任务始终会先于宏任务 var r = new Promise(function(resolve, reject){ console.log(\\"a\\"); resolve() }); setTimeout(()=&gt;console.log(\\"d\\"), 0) r.then(() =&gt; console.log(\\"c\\")); console.log(\\"b\\")","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/02_Javascript/Runtime/Promise%E7%9A%84%E5%BC%82%E6%AD%A5%E8%BF%87%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"Promise的resolve是异步的操作，只会在宏观任务执行完之后才执行，JS的微观任务always会加到当前宏观任务的末尾，下一个宏观任务在上一个宏观任务里面的微观任务执行完之后才会执行 Promise的resolve之前的代码只是正常的函数调用而已 setTimeout是浏览器API，会产生一个宏任务：微任务始终会先于宏任务 var r = new Promise(function(resolve, reject){ console.log(\\"a\\"); resolve() }); setTimeout(()=&gt;console.log(\\"d\\"), 0) r.then(() =&gt; console.log(\\"c\\")); console.log(\\"b\\")"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.48,"words":145},"filePathRelative":"Tech/Front-end/02_Javascript/Runtime/Promise的异步过程.md","excerpt":"<p>Promise的resolve是异步的操作，只会在宏观任务执行完之后才执行，JS的微观任务always会加到当前宏观任务的末尾，下一个宏观任务在上一个宏观任务里面的微观任务执行完之后才会执行</p>\\n<p>Promise的resolve之前的代码只是正常的函数调用而已</p>\\n<p>setTimeout是浏览器API，会产生一个宏任务：微任务始终会先于宏任务</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>    var r = new Promise(function(resolve, reject){\\n        console.log(\\"a\\");\\n        resolve()\\n    });\\n    setTimeout(()=&gt;console.log(\\"d\\"), 0)\\n    r.then(() =&gt; console.log(\\"c\\"));\\n    console.log(\\"b\\")\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
