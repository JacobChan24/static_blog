import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-9e438faa.js";const e={},p=t(`<h3 id="获取请求的相关信息" tabindex="-1"><a class="header-anchor" href="#获取请求的相关信息" aria-hidden="true">#</a> 获取请求的相关信息</h3><p>当一个请求从客户端发送至服务端的时候，服务端可以获取这个请求的很多信息，比如请求的http版本、请求方法、请求的地址和请求的头部：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>request<span class="token punctuation">.</span>httpVersion
request<span class="token punctuation">.</span>method
request<span class="token punctuation">.</span>url
request<span class="token punctuation">.</span>headers

<span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// 首先得判断请求是GET请求</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/home&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 返回主页的html</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用fs模块读取文件" tabindex="-1"><a class="header-anchor" href="#使用fs模块读取文件" aria-hidden="true">#</a> 使用fs模块读取文件</h3><p>导入fs模块 <code>const fs = require(&#39;fs&#39;)</code></p><p>使用readFile方法读取文件，此函数接受两个参数，第一个是<strong>文件的路径</strong>，第二个是回调函数，这个回调函数有两个参数，一个是err，另外一个是data，如果成功读取文件，data就有值，err会是undefined，如果读取文件失败，err就会被赋予报错信息</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./index.html&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		response<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">500</span>
		response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text-plain&quot;</span><span class="token punctuation">)</span>
		response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;Internal Error&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		response<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> statusCode
		response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span>
		response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="封装一个sendresponse方法" tabindex="-1"><a class="header-anchor" href="#封装一个sendresponse方法" aria-hidden="true">#</a> 封装一个sendResponse方法</h3><p>用于统一读取和发送html源代码，这个方法接受三个参数：要读取的文件名、返回的状态码和response object(用于设置返回的内容)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">sendResponse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename<span class="token punctuation">,</span> statusCode<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
	fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			response<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">500</span>
			response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;text-plain&quot;</span><span class="token punctuation">)</span>
			response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;Internal Error&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			response<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> statusCode
			response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span>
			response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[p];function c(i,u){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","02 根据不同的地址返回不同的html.html.vue"]]);export{d as default};
