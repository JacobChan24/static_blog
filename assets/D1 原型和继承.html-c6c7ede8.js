const e=JSON.parse('{"key":"v-919bd750","path":"/Tech/Front-end/02_Javascript/Senior/D1%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF.html","title":"","lang":"en-US","frontmatter":{"description":"1.构造函数 constructor function 在JS中，构造函数是一种特殊的函数，用于创建和初始化批量同质化对象。构造函数其实跟函数没有差别，差别在于如下两点： [[创建对象的三种方式]] 我们会认为地将构造函数首字母大写 function Person(name,age){ \\tthis.name = name \\tthis.age = age }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/02_Javascript/Senior/D1%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"1.构造函数 constructor function 在JS中，构造函数是一种特殊的函数，用于创建和初始化批量同质化对象。构造函数其实跟函数没有差别，差别在于如下两点： [[创建对象的三种方式]] 我们会认为地将构造函数首字母大写 function Person(name,age){ \\tthis.name = name \\tthis.age = age }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1.构造函数 constructor function","slug":"_1-构造函数-constructor-function","link":"#_1-构造函数-constructor-function","children":[]},{"level":2,"title":"2.原型","slug":"_2-原型","link":"#_2-原型","children":[{"level":3,"title":"prototype和__proto__","slug":"prototype和-proto","link":"#prototype和-proto","children":[]}]},{"level":2,"title":"3.继承","slug":"_3-继承","link":"#_3-继承","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.43,"words":1028},"filePathRelative":"Tech/Front-end/02_Javascript/Senior/D1 原型和继承.md","excerpt":"<h2> 1.构造函数 constructor function</h2>\\n<p>在JS中，构造函数是一种特殊的函数，用于创建和初始化批量同质化对象。构造函数其实跟函数没有差别，差别在于如下两点：\\n[[创建对象的三种方式]]</p>\\n<ol>\\n<li>我们会认为地将构造函数首字母大写</li>\\n</ol>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>function Person(name,age){\\n\\tthis.name = name\\n\\tthis.age = age\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
