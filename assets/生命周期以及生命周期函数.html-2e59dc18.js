import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,f as d}from"./app-9e438faa.js";const i={},r=d(`<h4 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h4><p>![[Pasted image 20230221123324.png]]</p><h4 id="生命周期函数" tabindex="-1"><a class="header-anchor" href="#生命周期函数" aria-hidden="true">#</a> 生命周期函数</h4><p>小程序自动执行</p><h6 id="应用生命周期函数" tabindex="-1"><a class="header-anchor" href="#应用生命周期函数" aria-hidden="true">#</a> 应用生命周期函数</h6><p>需要在app.js中进行声明</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>onLaunch(){}
onShow(){} //小程序切换到前台
onHide(){} //小程序切换到后台
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="页面生命周期函数" tabindex="-1"><a class="header-anchor" href="#页面生命周期函数" aria-hidden="true">#</a> 页面生命周期函数</h6><p>![[Pasted image 20230221124410.png]] onReady之后我们才能去操控页面的元素，用的比较多的是onLoad和onReady，前者是用于初始化页面的数据，options选项可以用来？？？？？</p>`,9),t=[r];function s(o,c){return a(),n("div",null,t)}const l=e(i,[["render",s],["__file","生命周期以及生命周期函数.html.vue"]]);export{l as default};
