import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as t,f as l}from"./app-9e438faa.js";const a={},o=l('<h4 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h4><p>新功能开发了一半甚至已经要完成了的时候，线上突然出现了bug，我们怎么修？</p><ul><li>马上修，把没做完的新功能也发到线上 <ul><li>没做完就发，会有很多未知的问题</li></ul></li><li>回退到之前的版本再修 <ul><li>前功尽弃，重新做一遍</li></ul></li><li>新功能做完再修 <ul><li>太紧急了，等不了</li></ul></li></ul><p>怎么办？</p><h4 id="分支运用" tabindex="-1"><a class="header-anchor" href="#分支运用" aria-hidden="true">#</a> 分支运用</h4><ul><li>开发新功能的时候应该拉一个新的分支，不应该在master上面进行改动</li><li>将dev分支上的未提交的改动先提交或者stash起来[[git stash的使用]]</li><li>bug出现时，基于线上的旧版本的代码拉另外一个hotfix的分支</li><li>开发人员切换到hotfix分支，修复之后将代码发到线上，即与<code>master</code>分支进行合并</li><li>然后切换到新功能开发的分支，照常进行开发，开发完成之后进行发版，即与<code>master</code>分支进行代码合并</li><li>删除hotfix分支</li><li>切回dev分支继续进行新功能的开发</li><li>开发完新功能之后切回来master分支，把代码合并</li></ul><h4 id="相关的git命令" tabindex="-1"><a class="header-anchor" href="#相关的git命令" aria-hidden="true">#</a> 相关的git命令</h4><p><code>git branch</code> 查看当前所有 <code>git branch dev</code>创建dev分支 <code>git checkout dev</code>切换到dev分支 <strong>注意</strong>：如果还有修改在工作区或者暂存区没有提交 ，我们是不能成功切换分支的，必需先把已经有的改动提交或者暂存在堆栈中 - git stash</p><p>合并分支</p><ul><li>切换回master分支 <code>git checkout master</code></li><li>合并hotfix修复分支到master分支 <code>git merge hotfix</code><code>git branch -d hotfix</code>删除hotfix分支</li></ul><h4 id="此场景的冲突" tabindex="-1"><a class="header-anchor" href="#此场景的冲突" aria-hidden="true">#</a> 此场景的冲突</h4><p>尝试将新功能代码合并的时候，因为此前做过hotfix，hotfix和新功能开发可能改动了同一行数据，所以此时git不知道应该保留哪个，所以我们要在本地手动解决冲突之后重新commit</p>',12),d=[o];function c(r,h){return e(),t("div",null,d)}const n=i(a,[["render",c],["__file","1.3 紧急线上修复的思路(分支的使用).html.vue"]]);export{n as default};
