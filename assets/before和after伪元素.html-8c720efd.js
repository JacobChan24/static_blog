const e=JSON.parse('{"key":"v-d464706a","path":"/Tech/Front-end/01_CSS/before%E5%92%8Cafter%E4%BC%AA%E5%85%83%E7%B4%A0.html","title":"","lang":"en-US","frontmatter":{"description":"用于在真正的页面元素内部之前或者之后添加新的内容 伪元素相当于将此元素作为父元素，添加第一个/最后一个子元素 必需设置content属性 before和after的伪元素属于行内元素 ![[Pasted image 20230111004450.png]] 但是也不是完全相同，因为伪元素不会出现在实际的DOM中","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/01_CSS/before%E5%92%8Cafter%E4%BC%AA%E5%85%83%E7%B4%A0.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"用于在真正的页面元素内部之前或者之后添加新的内容 伪元素相当于将此元素作为父元素，添加第一个/最后一个子元素 必需设置content属性 before和after的伪元素属于行内元素 ![[Pasted image 20230111004450.png]] 但是也不是完全相同，因为伪元素不会出现在实际的DOM中"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.33,"words":99},"filePathRelative":"Tech/Front-end/01_CSS/before和after伪元素.md","excerpt":"<ul>\\n<li>用于在真正的页面元素<strong>内部</strong>之前或者之后添加新的内容</li>\\n<li>伪元素相当于将此元素作为父元素，添加第一个/最后一个<strong>子元素</strong></li>\\n<li>必需设置content属性</li>\\n<li>before和after的伪元素属于行内元素</li>\\n</ul>\\n<p>![[Pasted image 20230111004450.png]]\\n但是也不是完全相同，因为伪元素不会出现在实际的DOM中</p>\\n","autoDesc":true}');export{e as data};
