const n=JSON.parse('{"key":"v-2ec0eb1a","path":"/Tech/Front-end/02_Javascript/Basics/%E7%AB%8B%E5%8D%B3%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F(IIFE).html","title":"","lang":"en-US","frontmatter":{"description":"立即调用函数表达式（Immediately Invoked Function Expression，IIFE）是一种 JavaScript 函数的创建和立即执行的方式。它是一种常见的用法，用于创建一个作用域被限定在函数内部的函数表达式，并立即执行该函数。 IIFE 的基本语法如下： (function() { // 函数体 })();","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/02_Javascript/Basics/%E7%AB%8B%E5%8D%B3%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F(IIFE).html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"立即调用函数表达式（Immediately Invoked Function Expression，IIFE）是一种 JavaScript 函数的创建和立即执行的方式。它是一种常见的用法，用于创建一个作用域被限定在函数内部的函数表达式，并立即执行该函数。 IIFE 的基本语法如下： (function() { // 函数体 })();"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.06,"words":319},"filePathRelative":"Tech/Front-end/02_Javascript/Basics/立即调用函数表达式(IIFE).md","excerpt":"<p>立即调用函数表达式（Immediately Invoked Function Expression，IIFE）是一种 JavaScript 函数的创建和立即执行的方式。它是一种常见的用法，用于创建一个作用域被限定在函数内部的函数表达式，并立即执行该函数。\\nIIFE 的基本语法如下：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 函数体</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
