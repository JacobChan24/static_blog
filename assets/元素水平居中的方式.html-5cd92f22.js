import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as r,f as n}from"./app-9e438faa.js";const t={},i=n(`<h3 id="行内元素水平居中" tabindex="-1"><a class="header-anchor" href="#行内元素水平居中" aria-hidden="true">#</a> 行内元素水平居中</h3><p>指文本，图片、按钮和超链接等，只需要给<strong>父元素</strong>设置<code>text-align: center;</code>即可</p><ul><li>如果父元素是行内元素，则这种方式不管用，比如a元素包裹一个img元素，因为a元素的宽度是根据内容决定的且无法被css更改，见[[块级元素(block)、行内元素(inline)和行内块元素(inline-block)]]</li><li>只能寻找a元素的父元素，设置<code>text-align: center;</code></li></ul><h3 id="块级元素水平居中" tabindex="-1"><a class="header-anchor" href="#块级元素水平居中" aria-hidden="true">#</a> 块级元素水平居中</h3><h4 id="定宽块级元素" tabindex="-1"><a class="header-anchor" href="#定宽块级元素" aria-hidden="true">#</a> 定宽块级元素</h4><p>因为块级元素的宽度默认行为为父元素的100%，所以要设置元素水平居中则先需要将此子元素定宽 ，定宽之后<strong>子元素</strong>设置<code>margin:0 auto;</code>即可</p><h4 id="transform-translate位移" tabindex="-1"><a class="header-anchor" href="#transform-translate位移" aria-hidden="true">#</a> transform: translate位移</h4><p>具体属性使用方式见：[[2D转换]] 左边/右边margin设置为父元素宽度的50%，再向左边/右边移动元素自身大小50%的距离，这样不用量，很方便，且元素的大小改变时仍然适用</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>margin-left: 50%;
transform: translateX(-50%)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="flex布局" tabindex="-1"><a class="header-anchor" href="#flex布局" aria-hidden="true">#</a> Flex布局</h4><h3 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> REFERENCE</h3><p>https://segmentfault.com/a/1190000014116655</p>`,12),d=[i];function s(c,l){return a(),r("div",null,d)}const f=e(t,[["render",s],["__file","元素水平居中的方式.html.vue"]]);export{f as default};
