const t=JSON.parse('{"key":"v-880417f4","path":"/Tech/Front-end/03_VUE/%E8%B7%AF%E7%94%B1/%E7%BC%96%E7%A8%8B%E5%BC%8F%E5%AF%BC%E8%88%AA.html","title":"","lang":"en-US","frontmatter":{"description":"this.$router.push()方法 当我们点击router-link时，内部会调用这个方法，这个方法会向history栈中添加一个新记录，所以点击回退的时候会回到之前的URL。 router.push()所接受的参数跟router-link属性to所接受的参数是完全一致的 接受一个字符串的路径或者描述地址的对象： ![[Pasted image 20221007210618.png]] router.replace()跟router.psh()唯一的区别就是它在导航的时候不会向history添加新记录，只会取代当前的目录","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/03_VUE/%E8%B7%AF%E7%94%B1/%E7%BC%96%E7%A8%8B%E5%BC%8F%E5%AF%BC%E8%88%AA.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"this.$router.push()方法 当我们点击router-link时，内部会调用这个方法，这个方法会向history栈中添加一个新记录，所以点击回退的时候会回到之前的URL。 router.push()所接受的参数跟router-link属性to所接受的参数是完全一致的 接受一个字符串的路径或者描述地址的对象： ![[Pasted image 20221007210618.png]] router.replace()跟router.psh()唯一的区别就是它在导航的时候不会向history添加新记录，只会取代当前的目录"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.45,"words":135},"filePathRelative":"Tech/Front-end/03_VUE/路由/编程式导航.md","excerpt":"<p><code>this.$router.push()</code>方法\\n当我们点击router-link时，内部会调用这个方法，这个方法会向history栈中添加一个新记录，所以点击回退的时候会回到之前的URL。\\nrouter.push()所接受的参数跟router-link属性to所接受的参数是完全一致的\\n接受一个<strong>字符串的路径</strong>或者<strong>描述地址的对象</strong>：\\n![[Pasted image 20221007210618.png]]\\nrouter.replace()跟router.psh()唯一的区别就是它在导航的时候不会向history添加新记录，只会取代当前的目录</p>","autoDesc":true}');export{t as data};
