import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as c,c as a,a as e,b as t,d as n,f as o}from"./app-9e438faa.js";const r={},l=o('<h1 id="如何为网站接入第三方微信登录教程" tabindex="-1"><a class="header-anchor" href="#如何为网站接入第三方微信登录教程" aria-hidden="true">#</a> 如何为网站接入第三方微信登录教程</h1><p>Web 网站的用户登录注册方式有用户名<strong>密码登录</strong>、<strong>验证码登录</strong>、<strong>OAuth 第三方授权登录</strong>等。</p><p>常用的第三方登录有 QQ、微信、微博、GitHub、知乎等，一般用户常用微信扫码授权的登录方式，今天介绍一下网站接入微信登录的方法。</p><h2 id="应用申请" tabindex="-1"><a class="header-anchor" href="#应用申请" aria-hidden="true">#</a> <strong>应用申请</strong></h2><p>网站应用中接入微信登录是基于OAuth2.0协议标准构建的微信OAuth2.0授权登录系统。</p><p>在进行微信OAuth2.0授权登录接入之前，需要在微信开放平台注册开发者帐号，并拥有一个已审核通过的网站应用，并获得相应的AppID和AppSecret，申请微信登录且通过审核后，才能开始接入微信登录流程。</p><figure><img src="https://pic2.zhimg.com/v2-aec8545316d74e9ddbf327e84979c0cd_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在管理中心-网站应用-创建网站应用中完善网站的基本信息，在第 2 步中完善网站的内容和运营者信息，提交给微信开放平台审核即可。</p><p>网站应用审核通过后会为网站应用生成 AppID 和 AppSecret，在接下来的接入流程中需要使用到 AppID 和 AppSecret。</p><figure><img src="https://pic3.zhimg.com/v2-6a9e53984d6de21345b86447c591a556_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="接入微信" tabindex="-1"><a class="header-anchor" href="#接入微信" aria-hidden="true">#</a> <strong>接入微信</strong></h2>',11),p={href:"https://link.zhihu.com/?target=https%3A//developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html",target:"_blank",rel:"noopener noreferrer"},u=e("strong",null,"中详细讲解了如何为应用接入微信登录，下面我们以实际应用的方式来详细介绍一下如何接入微信登录，我的小站已经接入了微信登录，想看效果的看官可以移步",-1),h={href:"https://link.zhihu.com/?target=https%3A//zi.pongj.com/",target:"_blank",rel:"noopener noreferrer"},g=o(`<p>接入微信登录需要获取到用户的 <code>openid</code> 和 <code>unionid</code>，简单来说分为三步：</p><ol><li>调用开放接口获取授权</li><li>通过授权后的 code 获取 access_token</li><li>使用access_token获取用户信息</li></ol><h3 id="获取授权" tabindex="-1"><a class="header-anchor" href="#获取授权" aria-hidden="true">#</a> <strong>获取授权</strong></h3><p>获取授权的过程就是让微信用户使用手机等移动设备扫码网站提供的 OAuth 标准的二维码链接，然后用户在微信中授权应用来使用用户的个人信息。</p><p>下图是微信开放平台提供的获取 <code>access_token</code> 的时序图：</p><figure><img src="https://pic3.zhimg.com/v2-d1d9d7e6741df973788f48a56212106a_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接下来对图中的步骤进行简要的说明：</p><ol><li><p>请求登录第三方应用<br> 即用户从浏览器中搜索网站关键字，或者输入网站地址进入到我们的网站应用。</p></li><li><p>请求微信 OAuth2.0 授权登录<br> 这一步，我们只需要在网站的登录页面中添加<strong>微信授权登录的超链接</strong>即可，<strong>在链接的地址中添加上网站应用在微信开放平台中的 AppID 和授权成功后重定向的网站地址。</strong><br> 链接的形式：</p></li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://open.weixin.qq.com/connect/qrconnect?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中：</p><ul><li><p>appid：应用的 AppID</p></li><li><p>redirect_uri：用户允许授权之后微信重定向回网站的地址，需要在微信开放平台的网站应用中配置“授权回调域”。<br> 比如我的网站应用中的回调域配置的是网站的域名地址，因此回调的页面只要在该域名下就可以：</p></li></ul><figure><img src="https://pic1.zhimg.com/v2-dfe7f730868d6dc263dd868f0d9e3438_b.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p>response_type：请求用户授权的地址中这里填写 <code>code</code>。</p></li><li><p>scope：应用授权作用域，拥有多个作用域用逗号（,）分隔，网页应用目前仅填写snsapi_login即可。</p></li><li><p>state：该参数可选，用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数加session进行校验。</p></li></ul><p>我的网站应用中的链接地址如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> https://open.weixin.qq.com/connect/qrconnect?appid=wxb6a3d3490ab4c2cd&amp;redirect_uri=https://zi.pongj.com/oauth/wechat/login&amp;response_type=code&amp;scope=snsapi_login&amp;state=STATE#wechat_redirect
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后在登录的页面中将链接地址添加超链接：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> &lt;a
  href=&quot;https://open.weixin.qq.com/connect/qrconnect?appid=wxb6a3d3490ab4c2cd&amp;redirect_uri=https://zi.pongj.com/oauth/wechat/login&amp;response_type=code&amp;scope=snsapi_login&amp;state=STATE#wechat_redirect&quot;
&gt;
  &lt;img
    title=&quot;微信&quot;
    alt=&quot;微信&quot;
    src=&quot;//sf6-scmcdn2-tos.pstatp.com/xitu_juejin_web/img/wechat.e0ff124.svg&quot;
    class=&quot;oauth-btn&quot;
  /&gt;
&lt;/a&gt;

 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic4.zhimg.com/v2-a4ce3c022f3a3c45ec98eea46e41ab3b_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li>请求用户确认<br> 在登录页面中添加了微信登录的超链接，用户点击微信登录的按钮之后就进入到了微信的域中，页面中会出现网站应用的基本信息和授权的二维码请求用户进行扫码授权。</li></ol><figure><img src="https://pic1.zhimg.com/v2-f6b50f5682b452bee30a17ad7ec618b0_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以从页面中看到，地址栏中的地址信息包含了我们配置的地址信息，页面中的二维码将我们的网站应用的名称显示在二维码的下方。<br> 此时用户扫描二维码之后，该二维码会同步显示用户的授权状态：</p><figure><img src="https://pic3.zhimg.com/v2-c67610e1a8eef37dfdb5a604c6fbc1a6_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同时在微信客户端中，我们也看到了应用的名称和 Logo 的基本信息：</p><figure><img src="https://pic3.zhimg.com/v2-ebfdb5acd8ab1d3178cf5200ef26fa8a_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,24),m=e("li",null,[e("p",null,[t("用户确认"),e("br"),e("strong",null,[t("用户在手机中“同意”授权之后，网站应用中的微信登录页面会跳转到我们在链接地址中配置的 "),e("code",null,"redirect_url"),t(" 的页面")])])],-1),_=e("code",null,"code",-1),v=e("br",null,null,-1),b=e("code",null,"redirect_uri",-1),f=e("code",null,"redirect_uri",-1),q=e("code",null,"code",-1),x=e("code",null,"redirect_uri",-1),k=e("code",null,"code",-1),A=e("br",null,null,-1),z=e("br",null,null,-1),E={href:"https://link.zhihu.com/?target=https%3A//zi.pongj.com/oauth/login/wechat%3Fcode%3Dcode%26state%3Dstate",target:"_blank",rel:"noopener noreferrer"},w=o("<li><p>通过 <code>code</code> 加上 AppID 和 AppSecret 来获取 <code>access_token</code><br> 我们在 <code>redirect_uri</code> 的页面中检查到地址中包含了 <code>code</code> 的参数，并且用户已授权，然后我们就可以使用 <code>code</code> 来获取 <code>access_token</code>。<br> 需要注意的是，<strong>由于 AppSecret 在应用中属于私密数据，所以此处获取 access_token 需要在服务器中调用，千万不要在浏览器端调用而导致 AppSecret 泄露。</strong></p></li>",1),I=o(`<h3 id="获取用户信息" tabindex="-1"><a class="header-anchor" href="#获取用户信息" aria-hidden="true">#</a> <strong>获取用户信息</strong></h3><p>下面是我作为开发者在微信开放平台的时序图的基础上补充了网站应用的前后端数据交互过程：</p><figure><img src="https://pic2.zhimg.com/v2-9fb290471df346948887d10944664ec5_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在获取到用户授权，也就是获取到 <code>code</code> 之后，接下来网站应用的步骤就是从上图中的 5-11 步骤所示，之前的步骤在上面已经介绍过了，接下来详细的介绍一下 5-11 步骤操作：</p><p><strong>第 5 步：</strong></p><p>在网站应用的 <code>redirect_uri</code> 页面中添加路经检测逻辑，检查是否带有 <code>code</code> 参数：如果带有 <code>code</code> 参数，表明用户已同意授权；如果未带有 <code>code</code> 参数，则说明用户拒绝或关闭了授权页面，此时需要重定向到登录页面，并提醒用户登录失败。</p><p>下面是我的 Nuxt.js 项目中的校验代码块：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>const { code } = this.$route.query
if (!code) {
  this.$notify.warning(&#39;请重新登录&#39;)
  return this.$router.push(&#39;/login&#39;)
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第 6 步：</strong></p><p>获取到了 <code>code</code> 参数，然后就需要获取授权的 <code>access_token</code> ，获取 <code>access_token</code> 需要使用 AppID 和 AppSecret，由于涉及到 AppSecret 的安全性，因此我们将请求发送到后端进行操作。</p><p><strong>第 7 步：</strong></p><p>通过传到后端的 <code>code</code> 参数，以及保存在环境变量或者配置文件中的 AppSecret 来获取 access_token。</p><p>获取 access_token 的请求地址格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中：</p><ul><li>appid：应用唯一标识，在微信开放平台提交应用审核通过后获得</li><li>secret：应用密钥AppSecret，在微信开放平台提交应用审核通过后获得</li><li>code：填写获取到的code参数</li><li>grant_type：填authorization_code</li></ul><p>在 Node.js 中使用 <code>request</code> 或者 <code>got</code> 等模块向微信开发平台发送 <code>GET</code> 请求。</p><p><strong>第 8 步：</strong></p><p>请求发送成功之后，微信开放平台会返回包含有 <code>access_token</code> 的返回值。</p><p>返回结果：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{ 
  &quot;access_token&quot;:&quot;ACCESS_TOKEN&quot;, 
  &quot;expires_in&quot;:7200, 
  &quot;refresh_token&quot;:&quot;REFRESH_TOKEN&quot;,
  &quot;openid&quot;:&quot;OPENID&quot;, 
  &quot;scope&quot;:&quot;SCOPE&quot;,
  &quot;unionid&quot;: &quot;o6_bmasdasdsad6_2sgVt7hMZOPfL&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),S=e("code",null,"access_token",-1),j=e("code",null,"access_token",-1),y=e("code",null,"access_token",-1),C=e("code",null,"refresh_token",-1),O=e("code",null,"refresh_token",-1),T={href:"https://link.zhihu.com/?target=https%3A//developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html",target:"_blank",rel:"noopener noreferrer"},L=o(`<p>可以看到返回的结果中包含了用户的 <code>openid</code> 和 <code>unionid</code>，这两个字段用户对于网站应用是固定不变的，因此我们可以在此处通过 <code>openid</code> 和 <code>unionid</code> 来判断该微信用户是否在我们的网站中已经注册过，如果注册过，直接生成合法的 <code>token</code> 值返回到前端页面即可；如果用户未在网站中注册，那么我们需要先获取到用户的个人信息，然后再生成 <code>token</code></p><p><strong>第 9 步：</strong></p><p>获取到 <code>access_token</code> 之后，并判断用户未在网站应用中注册，我们就需要获取用户信息，来保存用户的授权登录信息。</p><p>获取用户信息，需要调用下面的 API 接口：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://api.weixin.qq.com/sns/userinfo?access_token=access_token&amp;openid=openid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中：</p><ul><li>access_token：填写我们获取到的 <code>access_token</code></li><li>openid：用户的个人信息 <code>openid</code>，在上一步中的返回结果中包含了 <code>openid</code></li></ul><p><strong>第 10 步：</strong></p><p>微信开放平台请求校验通过后会返回用户的基本个人信息，包括昵称、头像、性别等。</p><p>返回结果：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  &quot;openid&quot;:&quot;OPENID&quot;,
  &quot;nickname&quot;:&quot;NICKNAME&quot;,
  &quot;sex&quot;:1,
  &quot;province&quot;:&quot;PROVINCE&quot;,
  &quot;city&quot;:&quot;CITY&quot;,
  &quot;country&quot;:&quot;COUNTRY&quot;,
  &quot;headimgurl&quot;: &quot;https://thirdwx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/0&quot;,
  &quot;privilege&quot;:[
  &quot;PRIVILEGE1&quot;,
  &quot;PRIVILEGE2&quot;
  ],
  &quot;unionid&quot;: &quot; o6_bmasdasdsad6_2sgVt7hMZOPfL&quot;

}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这一步，我们已经获取到了用户的个人信息，下面我们就需要将用户的信息保存在我们的数据库中，在下一次用户扫码微信登录的时候，可以直接返回用户的登录 <code>token</code>，而不需要再从微信平台中获取个人信息了。</p><p>如果网站应用还需要用户补充其他的个人信息，那么我们可以在此步骤中先将用户的微信信息存储起来，然后将请求重定向到补充信息的页面中，提示用户补充额外的信息。</p>`,13),N={href:"https://link.zhihu.com/?target=https%3A//zi.pongj.com/",target:"_blank",rel:"noopener noreferrer"},D=o(`<p>第 11 步：</p><p>数据库中已经生成了用户的登录授权信息，系统生成合法的 <code>token</code> 值返回给前端页面，前端页面来标识用户已登录成功，并跳转到网站的首页。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>if (result.token) {
  await this.$store.dispatch(&#39;user/oauth&#39;, result.token)
  this.$notify.success(&#39;登陆成功&#39;)
  setTimeout(() =&gt; {
    this.$router.push(&#39;/&#39;)
  }, 3000)
  return
}

this.$notify.success(&#39;请重新登录&#39;)
setTimeout(() =&gt; {
  this.$router.push(&#39;/login&#39;)
}, 3000)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> <strong>参考</strong></h2>`,4),P={href:"https://link.zhihu.com/?target=https%3A//developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html",target:"_blank",rel:"noopener noreferrer"},R=e("h2",{id:"更多内容",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#更多内容","aria-hidden":"true"},"#"),t(),e("strong",null,"更多内容")],-1),W=e("p",null,"前端开发转全栈，目前的技术栈是 Node.js、Python，日常研究 C 和 Rust，孜孜啃食系统开发和网络设计中~",-1),V={href:"https://link.zhihu.com/?target=https%3A//github.com/ruxf",target:"_blank",rel:"noopener noreferrer"},$=e("strong",null,"@ruxf，",-1),H={href:"https://www.zhihu.com/people/mrmengj",target:"_blank",rel:"noopener noreferrer"},Q=e("strong",null,"@孟太白，",-1),G={href:"https://link.zhihu.com/?target=https%3A//juejin.cn/user/1626932937494792",target:"_blank",rel:"noopener noreferrer"},K=e("p",null,"学到老，写到老，生命不停，编程不止~",-1),M=e("p",null,"加油，打工人~",-1);function U(Y,Z){const i=d("ExternalLinkIcon");return c(),a("div",null,[l,e("p",null,[t("微信开放平台的**"),e("a",p,[t("网站应用文档"),n(i)]),u,e("a",h,[t("这里"),n(i)]),t("**。")]),g,e("ol",null,[m,e("li",null,[e("p",null,[t("拉起第三方应用或重定向到第三方，带上授权的临时票据（"),_,t("）"),v,t(" 用户同意授权之后，微信登录页面在重定向到 "),b,t(" 的页面时，会在 "),f,t(" 地址后添加上临时的 "),q,t("，我们在开发 "),x,t(" 页面的时候可以判断地址中是否包含 "),k,t(" 来确定用户是否授权。"),A,t(" 比如我的网站回调页面就会变成："),z,e("a",E,[t("https://zi.pongj.com/oauth/login/wechat?code=code&state=state"),n(i)])])]),w]),I,e("p",null,[t("其中，"),S,t("是调用授权关系接口的调用凭证，由于"),j,t("有效期（目前为2个小时）较短，当"),y,t("超时后，可以使用"),C,t("进行刷新，刷新的操作只需要加上 "),O,t(" 并调用接口即可，详细的操作可以查看**"),e("a",T,[t("官方文档"),n(i)]),t("**")]),L,e("p",null,[t("由于我的网站中需要使用用户的邮箱地址和手机号信息来通知，因此我在回调的地址中添加了补充信息的页面，想看效果的的同学可以**"),e("a",N,[t("尝试一下"),n(i)]),t("**。")]),D,e("ul",null,[e("li",null,[t("微信开放平台网站应用官方文档**"),e("a",P,[t("地址"),n(i)]),t("**")])]),R,W,e("p",null,[t("更多的内容请移步**"),e("a",V,[t("GitHub"),n(i)]),$,e("a",H,[t("知乎"),n(i)]),Q,e("a",G,[t("掘金"),n(i)]),t("**，或者关注我的公众号@全栈开发师，欢迎来撩~")]),K,M])}const J=s(r,[["render",U],["__file","第三方授权登录.html.vue"]]);export{J as default};
