const e=JSON.parse('{"key":"v-060d186c","path":"/Tech/Front-end/02_Javascript/Basics/%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%9Avar_let%E5%92%8Cconst.html","title":"","lang":"en-US","frontmatter":{"description":"地址：https://www.freecodecamp.org/chinese/news/var-let-and-const-whats-the-difference/ 我的总结 为什么使用let? 即使是同名变量，如果在同一个作用域内，我们使用let无法重新声明同一个变量，而var可以，这可以避免我们不小心覆盖了之前的变量而不知道； 在不同的作用域内，我们可以声明同名变量，但是是彼此分隔不影响的，这就是使用let的好处(var关键字也有好处2) ES2015（ES6）出现了许多闪亮的新功能。许多 JavaScript 开发人员已经熟悉并开始使用这些功能，但其中一些功能对某些开发人员来说可能仍然是个谜。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/02_Javascript/Basics/%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%9Avar_let%E5%92%8Cconst.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"地址：https://www.freecodecamp.org/chinese/news/var-let-and-const-whats-the-difference/ 我的总结 为什么使用let? 即使是同名变量，如果在同一个作用域内，我们使用let无法重新声明同一个变量，而var可以，这可以避免我们不小心覆盖了之前的变量而不知道； 在不同的作用域内，我们可以声明同名变量，但是是彼此分隔不影响的，这就是使用let的好处(var关键字也有好处2) ES2015（ES6）出现了许多闪亮的新功能。许多 JavaScript 开发人员已经熟悉并开始使用这些功能，但其中一些功能对某些开发人员来说可能仍然是个谜。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"我的总结","slug":"我的总结","link":"#我的总结","children":[]},{"level":2,"title":"Var","slug":"var","link":"#var","children":[{"level":3,"title":"var 的作用域","slug":"var-的作用域","link":"#var-的作用域","children":[]},{"level":3,"title":"var 变量可以重新声明和更新","slug":"var-变量可以重新声明和更新","link":"#var-变量可以重新声明和更新","children":[]},{"level":3,"title":"var 的提升","slug":"var-的提升","link":"#var-的提升","children":[]},{"level":3,"title":"var 的问题","slug":"var-的问题","link":"#var-的问题","children":[]}]},{"level":2,"title":"Let","slug":"let","link":"#let","children":[{"level":3,"title":"let 是块作用域","slug":"let-是块作用域","link":"#let-是块作用域","children":[]},{"level":3,"title":"let 可以更新但不能重新声明","slug":"let-可以更新但不能重新声明","link":"#let-可以更新但不能重新声明","children":[]},{"level":3,"title":"let 的提升","slug":"let-的提升","link":"#let-的提升","children":[]}]},{"level":2,"title":"Const","slug":"const","link":"#const","children":[{"level":3,"title":"const 声明是块作用域","slug":"const-声明是块作用域","link":"#const-声明是块作用域","children":[]},{"level":3,"title":"const 不能更新或重新声明","slug":"const-不能更新或重新声明","link":"#const-不能更新或重新声明","children":[]},{"level":3,"title":"const 的提升","slug":"const-的提升","link":"#const-的提升","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":6.41,"words":1922},"filePathRelative":"Tech/Front-end/02_Javascript/Basics/声明变量的方式：var,let和const.md","excerpt":"<p>地址：https://www.freecodecamp.org/chinese/news/var-let-and-const-whats-the-difference/</p>\\n<h2> 我的总结</h2>\\n<p>为什么使用let?</p>\\n<ol>\\n<li>即使是同名变量，如果在同一个作用域内，我们使用let无法重新声明同一个变量，而var可以，这可以避免我们不小心覆盖了之前的变量而不知道；</li>\\n<li>在不同的作用域内，我们可以声明同名变量，但是是彼此分隔不影响的，这就是使用let的好处(var关键字也有好处2)</li>\\n</ol>\\n<p>ES2015（ES6）出现了许多闪亮的新功能。许多 JavaScript 开发人员已经熟悉并开始使用这些功能，但其中一些功能对某些开发人员来说可能仍然是个谜。</p>","autoDesc":true}');export{e as data};
