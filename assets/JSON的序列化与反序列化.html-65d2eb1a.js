const t=JSON.parse('{"key":"v-73f3822a","path":"/Tech/Front-end/02_Javascript/Basics/JSON%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html","title":"","lang":"en-US","frontmatter":{"description":"在网络传输中，数据往往需要在不同的系统之间进行传输，而不同的系统可能使用不同的编码方式来表示数据。为了解决这个问题，人们提出了一种用于数据交换的轻量级文本格式——JSON。 JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，也易于机器解析和生成。它基于 JavaScript 语言的语法，但是它可以被包含在许多编程语言中，包括 Python、Java、PHP 等。JSON 格式的数据是一个字符串，它的格式类似于 JavaScript 对象，但是 JSON 字符串必须使用双引号来表示属性名称。 在 JavaScript 中，我们可以使用 JSON.stringify() 方法将一个 JavaScript 对象序列化为 JSON 字符串，也可以使用 JSON.parse() 方法将一个 JSON 字符串反序列化为一个 JavaScript 对象。这样就可以在不同的系统之间传输数据，并且不用担心数据的编码方式问题。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/02_Javascript/Basics/JSON%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"在网络传输中，数据往往需要在不同的系统之间进行传输，而不同的系统可能使用不同的编码方式来表示数据。为了解决这个问题，人们提出了一种用于数据交换的轻量级文本格式——JSON。 JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，也易于机器解析和生成。它基于 JavaScript 语言的语法，但是它可以被包含在许多编程语言中，包括 Python、Java、PHP 等。JSON 格式的数据是一个字符串，它的格式类似于 JavaScript 对象，但是 JSON 字符串必须使用双引号来表示属性名称。 在 JavaScript 中，我们可以使用 JSON.stringify() 方法将一个 JavaScript 对象序列化为 JSON 字符串，也可以使用 JSON.parse() 方法将一个 JSON 字符串反序列化为一个 JavaScript 对象。这样就可以在不同的系统之间传输数据，并且不用担心数据的编码方式问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.07,"words":320},"filePathRelative":"Tech/Front-end/02_Javascript/Basics/JSON的序列化与反序列化.md","excerpt":"<p>在网络传输中，数据往往需要在不同的系统之间进行传输，而不同的系统可能使用不同的编码方式来表示数据。为了解决这个问题，人们提出了一种用于数据交换的轻量级文本格式——JSON。</p>\\n<p>JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，也易于机器解析和生成。它基于 JavaScript 语言的语法，但是它可以被包含在许多编程语言中，包括 Python、Java、PHP 等。JSON 格式的数据是一个字符串，它的格式类似于 JavaScript 对象，但是 JSON 字符串必须使用双引号来表示属性名称。</p>\\n<p>在 JavaScript 中，我们可以使用 <code>JSON.stringify()</code> 方法将一个 JavaScript 对象序列化为 JSON 字符串，也可以使用 <code>JSON.parse()</code> 方法将一个 JSON 字符串反序列化为一个 JavaScript 对象。这样就可以在不同的系统之间传输数据，并且不用担心数据的编码方式问题。</p>","autoDesc":true}');export{t as data};
