const e=JSON.parse('{"key":"v-0873d44f","path":"/Tech/Backend/nodeJS/%E5%9F%BA%E7%A1%80/04%20%E5%A4%84%E7%90%86POST%E8%AF%B7%E6%B1%82.html","title":"","lang":"en-US","frontmatter":{"description":"前端发送post请求 前端的发送POST请求有很多种方式，比如使用fetch函数或者XMLHttpRequest对象，但是还有一种情况是前端使用表单提交来发送POST请求，在这种方式里面form元素的method属性应为post，而action属性可以写一个url或者不写，不写的时候就是用当前的url来发送，写了之后后端服务器识别到这个post请求的url就是我们自己写的这个url 数据流和缓冲区 数据从客户端发送到服务端是以二进制流的形式分批传输的，数据到达服务器之后，先会被存到机器的缓冲区，等到缓冲区的数据量达到一定的量的时候，程序才会被读取","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Backend/nodeJS/%E5%9F%BA%E7%A1%80/04%20%E5%A4%84%E7%90%86POST%E8%AF%B7%E6%B1%82.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"前端发送post请求 前端的发送POST请求有很多种方式，比如使用fetch函数或者XMLHttpRequest对象，但是还有一种情况是前端使用表单提交来发送POST请求，在这种方式里面form元素的method属性应为post，而action属性可以写一个url或者不写，不写的时候就是用当前的url来发送，写了之后后端服务器识别到这个post请求的url就是我们自己写的这个url 数据流和缓冲区 数据从客户端发送到服务端是以二进制流的形式分批传输的，数据到达服务器之后，先会被存到机器的缓冲区，等到缓冲区的数据量达到一定的量的时候，程序才会被读取"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"前端发送post请求","slug":"前端发送post请求","link":"#前端发送post请求","children":[]},{"level":3,"title":"数据流和缓冲区","slug":"数据流和缓冲区","link":"#数据流和缓冲区","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.9,"words":570},"filePathRelative":"Tech/Backend/nodeJS/基础/04 处理POST请求.md","excerpt":"<h3> 前端发送post请求</h3>\\n<p>前端的发送POST请求有很多种方式，比如使用fetch函数或者XMLHttpRequest对象，但是还有一种情况是前端使用表单提交来发送POST请求，在这种方式里面<code>form</code>元素的<code>method</code>属性应为<code>post</code>，而<code>action</code>属性可以写一个url或者不写，不写的时候就是用当前的url来发送，写了之后后端服务器识别到这个post请求的url就是我们自己写的这个url</p>\\n<h3> 数据流和缓冲区</h3>\\n<p>数据从客户端发送到服务端是以二进制流的形式分批传输的，数据到达服务器之后，先会被存到机器的缓冲区，等到缓冲区的数据量达到一定的量的时候，程序才会被读取</p>","autoDesc":true}');export{e as data};
