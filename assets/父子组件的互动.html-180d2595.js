import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as i,f as a}from"./app-9e438faa.js";const l={},n=a(`<h4 id="inbox" tabindex="-1"><a class="header-anchor" href="#inbox" aria-hidden="true">#</a> INBOX</h4><p>https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html</p><p>https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/events.html</p><h4 id="父组件-子组件" tabindex="-1"><a class="header-anchor" href="#父组件-子组件" aria-hidden="true">#</a> 父组件==&gt;子组件</h4><h6 id="_1-传递动态绑定数据" tabindex="-1"><a class="header-anchor" href="#_1-传递动态绑定数据" aria-hidden="true">#</a> 1.传递动态绑定数据</h6><p>在子组件中定义属性，父组件就可以将它的数据动态绑定到子组件了</p><h6 id="_2-传递节点" tabindex="-1"><a class="header-anchor" href="#_2-传递节点" aria-hidden="true">#</a> 2.传递节点</h6><p>组件在定义的时候可以定义一个插槽，即slot节点</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;!--子组件模板--&gt;
&lt;view&gt;
	&lt;view&gt;组件内部节点&lt;/view&gt;
	&lt;slot&gt;&lt;/slot&gt;
&lt;/view&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>父组件在引用组件的时候，组件的子节点就会被挂载到这个slot节点上去</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;view&gt;
  &lt;component-tag-name&gt;
    &lt;!-- 这部分内容将被放置在组件 &lt;slot&gt; 的位置上 --&gt;
    &lt;view&gt;这里是插入到组件 slot 中的内容&lt;/view&gt;
  &lt;/component-tag-name&gt;
&lt;/view&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要使用到多个slot，则需要：</p><ol><li>在组件js中声明<code>options: {multipleSlots: true}</code></li><li>在组件的wxml中写多个slot节点，并且用不同的name进行区分</li><li>使用时<code>&lt;view slot=&quot;slotname&quot;&gt;&lt;/view&gt;</code>来讲不同的节点插入到不同的slot上</li></ol><h6 id="_3-获取组件实例" tabindex="-1"><a class="header-anchor" href="#_3-获取组件实例" aria-hidden="true">#</a> 3.获取组件实例</h6><p>如果以上两种方式不足以满足需要，父组件还可以通过 <code>this.selectComponent</code> 方法获取子组件实例对象，这样就可以直接访问组件的任意数据和方法。</p><h4 id="子组件-父组件" tabindex="-1"><a class="header-anchor" href="#子组件-父组件" aria-hidden="true">#</a> 子组件==&gt;父组件</h4><ol><li>事件监听：组件内定义的事件，组件触发某事件的时候，父页面监听这个组件的事件即可，即在page内直接定义事件处理函数即可</li><li>子组件触发事件：子组件调用<code>triggerEvent</code>方法，还可以传参，详见文档</li></ol>`,17),d=[n];function s(o,r){return t(),i("div",null,d)}const h=e(l,[["render",s],["__file","父子组件的互动.html.vue"]]);export{h as default};
