const e=JSON.parse('{"key":"v-5f47cd0a","path":"/Tech/Front-end/01_CSS/%E5%BC%B9%E6%80%A7%E5%AD%90%E5%85%83%E7%B4%A0%E7%9A%84%E5%A4%A7%E5%B0%8F-flex%E5%B1%9E%E6%80%A7.html","title":"","lang":"en-US","frontmatter":{"description":"在flex布局里面，可以用width和height属性设置弹性子元素的大小，但是有更加方便的属性flex来控制 flex是三个属性的short-hand属性flex-grow、flex-shrink、flex-basis flex:2 ==== flex: 2(grow) 1(shrink) 0%(basis) flex-basis 初始值是 auto，此时浏览器根据元素的是否在设置了width属性，如果有则使用width属性的值作为flex-basis的值，如果没有则使用元素内容自身的大小； 如果不是auto，我们可以自己设计大小:px、em、百分比等等； flex属性里如没有指定，则为0； 当弹性子元素的初始主尺寸确定了之后，因为可能不足占满或者溢出容器空间，所以我们就需要通过flex-grow和flex-shrink来决定缩放的规则","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/01_CSS/%E5%BC%B9%E6%80%A7%E5%AD%90%E5%85%83%E7%B4%A0%E7%9A%84%E5%A4%A7%E5%B0%8F-flex%E5%B1%9E%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"在flex布局里面，可以用width和height属性设置弹性子元素的大小，但是有更加方便的属性flex来控制 flex是三个属性的short-hand属性flex-grow、flex-shrink、flex-basis flex:2 ==== flex: 2(grow) 1(shrink) 0%(basis) flex-basis 初始值是 auto，此时浏览器根据元素的是否在设置了width属性，如果有则使用width属性的值作为flex-basis的值，如果没有则使用元素内容自身的大小； 如果不是auto，我们可以自己设计大小:px、em、百分比等等； flex属性里如没有指定，则为0； 当弹性子元素的初始主尺寸确定了之后，因为可能不足占满或者溢出容器空间，所以我们就需要通过flex-grow和flex-shrink来决定缩放的规则"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"flex-basis","slug":"flex-basis","link":"#flex-basis","children":[]},{"level":3,"title":"flex-shrink","slug":"flex-shrink","link":"#flex-shrink","children":[]},{"level":3,"title":"flex-grow","slug":"flex-grow","link":"#flex-grow","children":[]},{"level":3,"title":"简写属性flex","slug":"简写属性flex","link":"#简写属性flex","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.44,"words":431},"filePathRelative":"Tech/Front-end/01_CSS/弹性子元素的大小-flex属性.md","excerpt":"<p>在flex布局里面，可以用width和height属性设置弹性子元素的大小，但是有更加方便的属性flex来控制\\nflex是三个属性的short-hand属性flex-grow、flex-shrink、flex-basis\\nflex:2 ==== flex: 2(grow) 1(shrink) 0%(basis)</p>\\n<h3> flex-basis</h3>\\n<ul>\\n<li>初始值是 auto，此时浏览器根据元素的是否在设置了width属性，如果有则使用width属性的值作为flex-basis的值，如果没有则使用元素内容自身的大小；</li>\\n<li>如果不是auto，我们可以自己设计大小:px、em、百分比等等；</li>\\n<li>flex属性里如没有指定，则为0；</li>\\n<li>当弹性子元素的初始主尺寸确定了之后，因为可能不足占满或者溢出容器空间，所以我们就需要通过flex-grow和flex-shrink来决定缩放的规则</li>\\n</ul>","autoDesc":true}');export{e as data};
