import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,f as e}from"./app-9e438faa.js";const t={},c=e('<p>在普通的字符串中如果要嵌入表达式或者变量，我们一般都用<code>+</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;the answer is: &quot;</span> <span class="token operator">+</span> answer<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>现在通过模板字符串，我们可以使用更加优雅的方式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">the answer is: $(answer)</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>反引号+&amp;，里面不仅可以引用变量，还可以写简单的表达式来做简单的运算</p>',5),o=[c];function p(i,l){return n(),a("div",null,o)}const d=s(t,[["render",p],["__file","模板字符串.html.vue"]]);export{d as default};
