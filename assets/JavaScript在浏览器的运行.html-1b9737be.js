const t=JSON.parse('{"key":"v-36fd460e","path":"/Tech/Front-end/02_Javascript/Basics/JavaScript%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E8%BF%90%E8%A1%8C.html","title":"","lang":"en-US","frontmatter":{"description":"JavaScript 文件不能够独立运行，需要导入到网页中，通过浏览器来执行。使用 script 标签可以导入 JavaScript 文件。 浏览器在解析 HTML 文档时，将根据文档流从上到下逐行解析和显示。JavaScript 代码也是 HTML 文档的组成部分，因此 JavaScript 脚本的执行顺序也是根据 script 标签的位置来确定的，一般将外部导入的JS文件写在head中，在HTML元素渲染之前就确保加载完毕，如果JS文件太大的话，可以放在body后面，不影响HTML的解析，加快网页响应速度 你看，对于导入的 JavaScript 文件，也将按照 ＜script&gt; 标签在文档中出现的顺序来执行，而且执行过程是文档解析的一部分，不会单独解析或者延期执行 如果想改变 JavaScript 文件的执行顺序，可以给 script标签增加 defer 或者 async 属性，见[[JS文件延迟和异步加载]]","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/02_Javascript/Basics/JavaScript%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E8%BF%90%E8%A1%8C.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"JavaScript 文件不能够独立运行，需要导入到网页中，通过浏览器来执行。使用 script 标签可以导入 JavaScript 文件。 浏览器在解析 HTML 文档时，将根据文档流从上到下逐行解析和显示。JavaScript 代码也是 HTML 文档的组成部分，因此 JavaScript 脚本的执行顺序也是根据 script 标签的位置来确定的，一般将外部导入的JS文件写在head中，在HTML元素渲染之前就确保加载完毕，如果JS文件太大的话，可以放在body后面，不影响HTML的解析，加快网页响应速度 你看，对于导入的 JavaScript 文件，也将按照 ＜script&gt; 标签在文档中出现的顺序来执行，而且执行过程是文档解析的一部分，不会单独解析或者延期执行 如果想改变 JavaScript 文件的执行顺序，可以给 script标签增加 defer 或者 async 属性，见[[JS文件延迟和异步加载]]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.87,"words":261},"filePathRelative":"Tech/Front-end/02_Javascript/Basics/JavaScript在浏览器的运行.md","excerpt":"<ol>\\n<li>\\n<p>JavaScript 文件不能够独立运行，需要导入到网页中，通过浏览器来执行。使用 script 标签可以导入 JavaScript 文件。</p>\\n</li>\\n<li>\\n<p>浏览器在解析 HTML 文档时，将根据文档流从上到下逐行解析和显示。JavaScript 代码也是 HTML 文档的组成部分，因此 JavaScript 脚本的执行顺序也是根据 script 标签的位置来确定的，一般将外部导入的JS文件写在head中，在HTML元素渲染之前就确保加载完毕，如果JS文件太大的话，可以放在body后面，不影响HTML的解析，加快网页响应速度</p>\\n</li>\\n<li>\\n<p>你看，对于导入的 JavaScript 文件，也将按照 ＜script&gt; 标签在文档中出现的顺序来执行，而且执行过程是文档解析的一部分，不会单独解析或者延期执行</p>\\n</li>\\n<li>\\n<p>如果想改变 JavaScript 文件的执行顺序，可以给 script标签增加 defer 或者 async 属性，见[[JS文件延迟和异步加载]]</p>\\n</li>\\n</ol>","autoDesc":true}');export{t as data};
