import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as d,f as t}from"./app-9e438faa.js";const a={},l=t(`<h4 id="what" tabindex="-1"><a class="header-anchor" href="#what" aria-hidden="true">#</a> what</h4><p>当网页加载时，浏览器会自动创建当前页面的文档对象模型(DOM)，所有的<strong>元素、属性、文本、注释</strong>都会被组织成一个逻辑树结构，成为一个节点，每一个节点都是一个对象![[Pasted image 20220623113707.png]] 我们可以使用javascript来访问、删除、修改或添加文档中的任何内容</p><h4 id="dom对象的属性" tabindex="-1"><a class="header-anchor" href="#dom对象的属性" aria-hidden="true">#</a> DOM对象的属性</h4><p>![[Pasted image 20220623113853.png]]</p><h4 id="dom对象的方法" tabindex="-1"><a class="header-anchor" href="#dom对象的方法" aria-hidden="true">#</a> DOM对象的方法</h4><p>![[Pasted image 20220623113933.png]] 简单分类：</p><ul><li>抓取元素 <ul><li><code>getElementsByClassName/Id/Name/Tagname()</code></li><li><code>querySelector()/querySelectorAll()</code> # 用CSS的选择器进行元素选择</li></ul></li><li>添加元素/属性/文本/注释</li><li>修改</li><li>删除</li><li>创建 <ul><li><code>createElement()</code> - 创建一个元素节点</li><li><code>createTextNode()</code> - 创建一个文本节点</li><li><code>createComment()</code> - 创建一个注释节点</li><li><code>createAttribute()</code> - 为元素添加一个属性节点，事件句柄（如onclick）也是一个属性，等同于为元素加一个监听事件</li></ul></li><li>操作元素 ------ 为元素添加事件处理 <ul><li><code>addEventListener()</code></li><li><code>removeEventListener()</code></li></ul></li></ul><h4 id="实例" tabindex="-1"><a class="header-anchor" href="#实例" aria-hidden="true">#</a> 实例</h4><ul><li>给document对象增加一个click事件的监听器，一点击页面就显示文字“哈哈哈&quot;</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>document.addEventLister(&quot;click&quot;,function(){
	document.body.innerHTML = &quot;哈哈哈&quot;
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>用JS创建一个叫做box的body的div子元素</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var box = document.createElement(&quot;div&quot;);
document.body.appendChild(box)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建一个属性节点，并将其赋予给已经存在的div属性</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var att = document.createAttribute(&quot;CTQ&quot;);
att.value = EVELYN;
document.body.div.setAttributeNode(att);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建一个btn元素，创建一个文本节点，将文本赋予按钮，将按钮变成已存在div的子元素</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var btn = document.createElement(&quot;button&quot;);
var t = document.createTextNode(&quot;提交&quot;);
btn.appendChild(t);
document.body.div.appendChild(btn);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),n=[l];function c(o,r){return i(),d("div",null,n)}const m=e(a,[["render",c],["__file","DOM对象.html.vue"]]);export{m as default};
