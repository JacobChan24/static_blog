const e=JSON.parse('{"key":"v-de87ba34","path":"/Tech/Backend/nodeJS/%E5%9F%BA%E7%A1%80/03%20%E8%8E%B7%E5%8F%96%E8%AF%B7%E6%B1%82%E7%9A%84query%E5%8F%82%E6%95%B0.html","title":"","lang":"en-US","frontmatter":{"description":"直接使用request.url的话会将路径和参数一起打印出来，我们不方便直接获取到请求的参数 推荐：使用javascript里面的url object 创建一个新的url对象 const requestUrl = new URL() 这个函数接受两个参数，第一个是当前访问的页面，及request的url属性，另外一个是基本的URL，即协议名+域名+端口号 const requestUrl = new URL(request.url, `http://${ip}:${port}`)","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Backend/nodeJS/%E5%9F%BA%E7%A1%80/03%20%E8%8E%B7%E5%8F%96%E8%AF%B7%E6%B1%82%E7%9A%84query%E5%8F%82%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"直接使用request.url的话会将路径和参数一起打印出来，我们不方便直接获取到请求的参数 推荐：使用javascript里面的url object 创建一个新的url对象 const requestUrl = new URL() 这个函数接受两个参数，第一个是当前访问的页面，及request的url属性，另外一个是基本的URL，即协议名+域名+端口号 const requestUrl = new URL(request.url, `http://${ip}:${port}`)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.65,"words":196},"filePathRelative":"Tech/Backend/nodeJS/基础/03 获取请求的query参数.md","excerpt":"<p>直接使用request.url的话会将路径和参数一起打印出来，我们不方便直接获取到请求的参数\\n推荐：使用javascript里面的url object</p>\\n<ol>\\n<li>创建一个新的url对象\\n<code>const requestUrl = new URL()</code>\\n这个函数接受两个参数，第一个是当前访问的页面，及request的url属性，另外一个是基本的URL，即协议名+域名+端口号</li>\\n</ol>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>const requestUrl = new URL(request.url, `http://${ip}:${port}`)\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
