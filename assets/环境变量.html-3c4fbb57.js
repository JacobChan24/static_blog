import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as r,c as t,a as o,b as e,d as s,f as n}from"./app-9e438faa.js";const p={},i=n('<p>环境变量是在程序之外设置的变量，通常通过云服务提供商或操作系统设置。</p><p>在 Node 中，环境变量是一种很好的方式，可以安全、方便地配置那些不经常改变的东西，如 URL、认证密钥和密码。</p><h2 id="如何创建环境变量" tabindex="-1"><a class="header-anchor" href="#如何创建环境变量" aria-hidden="true">#</a> 如何创建环境变量</h2><p>Node 开箱即支持环境变量，并且可以通过 <code>env</code> 对象（它是 <code>process</code> 全局对象的一个属性）访问。</p><p>要看到这一点，你可以在 Node REPL 中通过直接向 <code>p<wbr>rocess.env</code> 对象添加一个变量来创建你自己的环境变量。</p><p>例如，要创建一个环境变量来存储我行李箱上的密码，我可以这样分配变量：<code>p<wbr>rocess.env.LUGGAGE_COMBO=“12345”</code>。</p><p>（根据惯例，环境变量一般用大写字母书写）。</p><p>虽然这是一个很好的实验，但你不会在一个应用程序中这样使用 Node REPL。要在你的 Node 应用程序中创建环境变量，你可能想使用像 DotEnv 这样的包。</p><h2 id="如何使用-dotenv" tabindex="-1"><a class="header-anchor" href="#如何使用-dotenv" aria-hidden="true">#</a> 如何使用 DotEnv</h2>',9),h={href:"https://www.npmjs.com/package/dotenv",target:"_blank",rel:"noopener noreferrer"},l=o("code",null,".env",-1),v=o("code",null,[e("p"),o("wbr"),e("rocess.env")],-1),_=n(`<p>要使用 DotEnv，首先使用命令安装它：<code>npm i dotenv</code>。然后在你的应用程序中，像这样要求和配置这个包：<code>require(&#39;dotenv&#39;).config()</code>。</p><p>请注意，一些包，如 Create React App 已经包括 DotEnv，而云服务提供商可能有不同的设置环境变量的方法。因此，在你遵循本文的任何建议之前，请确保检查你正在使用的任何包或供应商的文档。</p><h2 id="如何创建一个-env-文件" tabindex="-1"><a class="header-anchor" href="#如何创建一个-env-文件" aria-hidden="true">#</a> 如何创建一个 .env 文件</h2><p>在你安装并配置了 DotEnv 之后，在文件结构的顶层创建一个名为 <code>.env</code> 的文件，这是你创建所有环境变量的地方，以 <code>NAME=value</code> 格式书写。例如，你可以像这样设置一个端口变量为 3000：<code>PORT=3000</code>。</p><p>你可以在 <code>.env</code> 文件中声明多个变量。例如，你可以这样设置与数据库有关的环境变量：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DB_HOST=localhost
DB_USER=admin
DB_PASSWORD=password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>没有必要用引号来包裹字符串。DotEnv 会自动为你做这个。</p><p>一旦你创建了这个文件，请记住，你不应该把它推送到 GitHub，因为它可能包含敏感数据，如认证密钥和密码。将该文件添加到 .gitignore 中，以避免不小心将其推送到公共仓库。</p><h2 id="如何访问环境变量" tabindex="-1"><a class="header-anchor" href="#如何访问环境变量" aria-hidden="true">#</a> 如何访问环境变量</h2><p>访问你的变量是非常容易的！它们被附在 <code>p<wbr>rocess.env</code> 对象上，所以你可以使用 <code>p<wbr>rocess.env.KEY</code> 模式访问它们。</p><p>如果你需要改变任何环境变量的值，你只需要修改 <code>.env</code> 文件。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> <strong>总结</strong></h2><p>环境变量将使你的代码更容易维护和更安全。用 Dotenv 来设置它们很容易，并且可以在 Node 中直接使用它们。</p><p>现在你知道它是怎么做的了，你可以为你的 Node 应用程序创建环境变量了！</p>`,14);function u(m,b){const d=c("ExternalLinkIcon");return r(),t("div",null,[i,o("p",null,[o("a",h,[e("DotEnv"),s(d)]),e(" 是一个轻量级的 npm 包，它可以从 "),l,e(" 文件中自动加载环境变量到 "),v,e(" 对象。")]),_])}const x=a(p,[["render",u],["__file","环境变量.html.vue"]]);export{x as default};
