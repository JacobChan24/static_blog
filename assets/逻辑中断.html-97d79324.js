const e=JSON.parse('{"key":"v-59b1d445","path":"/Tech/Front-end/02_Javascript/Basics/%E9%80%BB%E8%BE%91%E4%B8%AD%E6%96%AD.html","title":"","lang":"en-US","frontmatter":{"description":"又叫做短路运算，即 当有多个表达式（逻辑运算或者其他运算）或者参与逻辑运算的时候，当左边表达式的结果就可以确定逻辑运算的结果时，我们便不再运算右边表达式的值了 这里可以参见[[扩展运算符、解构运算符、三元运算符]]，此逻辑运算可以替代三元[[运算符]] 逻辑与的短路运算 语法：表达式1 &amp;&amp; 表达式2 如果第一个表达式的值为真，则返回表达式2 如果第一个表达式为假，则停止运算，返回表达式1 逻辑或的短路运算 语法：表达式1 || 表达式2","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/02_Javascript/Basics/%E9%80%BB%E8%BE%91%E4%B8%AD%E6%96%AD.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"又叫做短路运算，即 当有多个表达式（逻辑运算或者其他运算）或者参与逻辑运算的时候，当左边表达式的结果就可以确定逻辑运算的结果时，我们便不再运算右边表达式的值了 这里可以参见[[扩展运算符、解构运算符、三元运算符]]，此逻辑运算可以替代三元[[运算符]] 逻辑与的短路运算 语法：表达式1 &amp;&amp; 表达式2 如果第一个表达式的值为真，则返回表达式2 如果第一个表达式为假，则停止运算，返回表达式1 逻辑或的短路运算 语法：表达式1 || 表达式2"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.76,"words":228},"filePathRelative":"Tech/Front-end/02_Javascript/Basics/逻辑中断.md","excerpt":"<p>又叫做短路运算，即\\n当有多个表达式（逻辑运算或者其他运算）或者参与逻辑运算的时候，当左边表达式的结果就可以确定逻辑运算的结果时，我们便不再运算右边表达式的值了\\n这里可以参见[[扩展运算符、解构运算符、三元运算符]]，此逻辑运算可以替代三元[[运算符]]</p>\\n<h4> 逻辑与的短路运算</h4>\\n<p>语法：<code>表达式1 &amp;&amp; 表达式2</code></p>\\n<ul>\\n<li>如果第一个表达式的值为真，则返回表达式2</li>\\n<li>如果第一个表达式为假，则停止运算，返回表达式1</li>\\n</ul>\\n<h4> 逻辑或的短路运算</h4>\\n<p>语法：<code>表达式1 || 表达式2</code></p>","autoDesc":true}');export{e as data};
