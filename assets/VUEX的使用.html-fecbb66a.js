const t=JSON.parse(`{"key":"v-1dae2470","path":"/Tech/Front-end/03_VUE/VUEX%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"","lang":"en-US","frontmatter":{"description":"1.创建store.js文件 在src文件夹下创建文件夹store，在此文件夹下新建store.js文件，这个文件是用来定义公共状态及方法并且将之导出的文件 store.js中应该写的逻辑有： import vuex from 'vuex' //导入此模块 const store = Vuex.createStore({ //定义一个store对象，包含数据和方法 \\tstate: (){ \\t\\treturn{ \\t\\t\\tcount:0 \\t\\t} \\t}, //定义的公共数据，唯一数据源 \\taction: {}, //类似于mutation，用于提交mutation来改变状态，而不直接变更状态，可以包含任意异步操作 \\tmutation: {}, //类似函数，改变state数据的唯一途径，且不能用于处理异步事件 \\tgetter: {}, //如vue中的计算属性一样，基于state数据的二次包装，常用于**数据的筛选**和多个数据的相关性计算 }) export default store //导出此模块，方便在main.js中引入","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/03_VUE/VUEX%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"1.创建store.js文件 在src文件夹下创建文件夹store，在此文件夹下新建store.js文件，这个文件是用来定义公共状态及方法并且将之导出的文件 store.js中应该写的逻辑有： import vuex from 'vuex' //导入此模块 const store = Vuex.createStore({ //定义一个store对象，包含数据和方法 \\tstate: (){ \\t\\treturn{ \\t\\t\\tcount:0 \\t\\t} \\t}, //定义的公共数据，唯一数据源 \\taction: {}, //类似于mutation，用于提交mutation来改变状态，而不直接变更状态，可以包含任意异步操作 \\tmutation: {}, //类似函数，改变state数据的唯一途径，且不能用于处理异步事件 \\tgetter: {}, //如vue中的计算属性一样，基于state数据的二次包装，常用于**数据的筛选**和多个数据的相关性计算 }) export default store //导出此模块，方便在main.js中引入"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.06,"words":318},"filePathRelative":"Tech/Front-end/03_VUE/VUEX的使用.md","excerpt":"<p>1.创建store.js文件\\n在src文件夹下创建文件夹<code>store</code>，在此文件夹下新建<code>store.js</code>文件，这个文件是用来定义公共状态及方法并且将之导出的文件\\nstore.js中应该写的逻辑有：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> vuex <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vuex'</span>    <span class=\\"token comment\\">//导入此模块</span>\\n\\n<span class=\\"token keyword\\">const</span> store <span class=\\"token operator\\">=</span> Vuex<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createStore</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>   <span class=\\"token comment\\">//定义一个store对象，包含数据和方法</span>\\n\\t<span class=\\"token literal-property property\\">state</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token literal-property property\\">count</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">0</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>      <span class=\\"token comment\\">//定义的公共数据，唯一数据源</span>\\n\\t<span class=\\"token literal-property property\\">action</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>     <span class=\\"token comment\\">//类似于mutation，用于提交mutation来改变状态，而不直接变更状态，可以包含任意异步操作</span>\\n\\t<span class=\\"token literal-property property\\">mutation</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>   <span class=\\"token comment\\">//类似函数，改变state数据的唯一途径，且不能用于处理异步事件</span>\\n\\t<span class=\\"token literal-property property\\">getter</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>     <span class=\\"token comment\\">//如vue中的计算属性一样，基于state数据的二次包装，常用于**数据的筛选**和多个数据的相关性计算</span>\\n\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> store <span class=\\"token comment\\">//导出此模块，方便在main.js中引入</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};
