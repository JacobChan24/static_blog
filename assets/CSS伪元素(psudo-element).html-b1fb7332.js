const e=JSON.parse('{"key":"v-0f522f37","path":"/Tech/Front-end/01_CSS/CSS%E4%BC%AA%E5%85%83%E7%B4%A0(psudo-element).html","title":"","lang":"en-US","frontmatter":{"description":"定义 伪元素是一个附加至选择器末的关键词，允许对被选择元素的特定部分修改样式。一个选择器中只能使用一个伪元素。伪元素必须紧跟在语句中的简单选择器/基础选择器之后，按照规范，应该使用双冒号（::）而不是单个冒号（:），以便区分伪类和伪元素。 举例 ::after: 用来创建一个伪元素，作为前面选择器选中元素的最后一个子元素，这个元素默认为行内元素，通常会配合content属性来为该元素添加装饰内容。 ::before ::first-line","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Tech/Front-end/01_CSS/CSS%E4%BC%AA%E5%85%83%E7%B4%A0(psudo-element).html"}],["meta",{"property":"og:site_name","content":"Blog Demo"}],["meta",{"property":"og:description","content":"定义 伪元素是一个附加至选择器末的关键词，允许对被选择元素的特定部分修改样式。一个选择器中只能使用一个伪元素。伪元素必须紧跟在语句中的简单选择器/基础选择器之后，按照规范，应该使用双冒号（::）而不是单个冒号（:），以便区分伪类和伪元素。 举例 ::after: 用来创建一个伪元素，作为前面选择器选中元素的最后一个子元素，这个元素默认为行内元素，通常会配合content属性来为该元素添加装饰内容。 ::before ::first-line"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Mr.Jacob"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jacob\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"举例","slug":"举例","link":"#举例","children":[]},{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.63,"words":189},"filePathRelative":"Tech/Front-end/01_CSS/CSS伪元素(psudo-element).md","excerpt":"<h4> 定义</h4>\\n<p>伪元素是一个附加至选择器末的关键词，允许对被选择元素的特定部分修改样式。一个选择器中只能使用一个伪元素。伪元素必须紧跟在语句中的简单选择器/基础选择器之后，按照规范，应该使用双冒号（<code>::</code>）而不是单个冒号（<code>:</code>），以便区分伪类和伪元素。</p>\\n<h3> 举例</h3>\\n<p><code>::after</code>: 用来创建一个伪元素，作为前面选择器选中元素的最后一个子元素，这个元素默认为行内元素，通常会配合<a href=\\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/content\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>content</code></a>属性来为该元素添加装饰内容。\\n<code>::before</code>\\n<code>::first-line</code></p>","autoDesc":true}');export{e as data};
